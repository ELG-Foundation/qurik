/*! tailwindcss v4.1.14 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
    ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *,
    :before,
    :after,
    ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-x-reverse: 0;
      --tw-border-style: solid;
      --tw-divide-y-reverse: 0;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}
@layer theme {
  :root,
  :host {
    --font-sans:
      "Instrument Sans", ui-sans-serif, system-ui, sans-serif,
      "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
      "Noto Color Emoji";
    --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
    --font-mono:
      ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-50: oklch(97.1% 0.013 17.38);
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-red-900: oklch(39.6% 0.141 25.723);
    --color-red-950: oklch(25.8% 0.092 26.042);
    --color-orange-50: oklch(98% 0.016 73.684);
    --color-orange-100: oklch(95.4% 0.038 75.164);
    --color-orange-200: oklch(90.1% 0.076 70.697);
    --color-orange-300: oklch(83.7% 0.128 66.29);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-orange-700: oklch(55.3% 0.195 38.402);
    --color-orange-800: oklch(47% 0.157 37.304);
    --color-orange-900: oklch(40.8% 0.123 38.172);
    --color-orange-950: oklch(26.6% 0.079 36.259);
    --color-amber-50: oklch(98.7% 0.022 95.277);
    --color-amber-100: oklch(96.2% 0.059 95.617);
    --color-amber-200: oklch(92.4% 0.12 95.746);
    --color-amber-300: oklch(87.9% 0.169 91.605);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-amber-600: oklch(66.6% 0.179 58.318);
    --color-amber-700: oklch(55.5% 0.163 48.998);
    --color-amber-800: oklch(47.3% 0.137 46.201);
    --color-amber-900: oklch(41.4% 0.112 45.904);
    --color-amber-950: oklch(27.9% 0.077 45.635);
    --color-yellow-50: oklch(98.7% 0.026 102.212);
    --color-yellow-100: oklch(97.3% 0.071 103.193);
    --color-yellow-200: oklch(94.5% 0.129 101.54);
    --color-yellow-300: oklch(90.5% 0.182 98.111);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-yellow-700: oklch(55.4% 0.135 66.442);
    --color-yellow-800: oklch(47.6% 0.114 61.907);
    --color-yellow-900: oklch(42.1% 0.095 57.708);
    --color-yellow-950: oklch(28.6% 0.066 53.813);
    --color-lime-50: oklch(98.6% 0.031 120.757);
    --color-lime-100: oklch(96.7% 0.067 122.328);
    --color-lime-200: oklch(93.8% 0.127 124.321);
    --color-lime-300: oklch(89.7% 0.196 126.665);
    --color-lime-400: oklch(84.1% 0.238 128.85);
    --color-lime-500: oklch(76.8% 0.233 130.85);
    --color-lime-600: oklch(64.8% 0.2 131.684);
    --color-lime-700: oklch(53.2% 0.157 131.589);
    --color-lime-800: oklch(45.3% 0.124 130.933);
    --color-lime-900: oklch(40.5% 0.101 131.063);
    --color-lime-950: oklch(27.4% 0.072 132.109);
    --color-green-50: oklch(98.2% 0.018 155.826);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-200: oklch(92.5% 0.084 155.995);
    --color-green-300: oklch(87.1% 0.15 154.449);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-green-950: oklch(26.6% 0.065 152.934);
    --color-emerald-50: oklch(97.9% 0.021 166.113);
    --color-emerald-100: oklch(95% 0.052 163.051);
    --color-emerald-200: oklch(90.5% 0.093 164.15);
    --color-emerald-300: oklch(84.5% 0.143 164.978);
    --color-emerald-400: oklch(76.5% 0.177 163.223);
    --color-emerald-500: oklch(69.6% 0.17 162.48);
    --color-emerald-600: oklch(59.6% 0.145 163.225);
    --color-emerald-700: oklch(50.8% 0.118 165.612);
    --color-emerald-800: oklch(43.2% 0.095 166.913);
    --color-emerald-900: oklch(37.8% 0.077 168.94);
    --color-emerald-950: oklch(26.2% 0.051 172.552);
    --color-teal-50: oklch(98.4% 0.014 180.72);
    --color-teal-100: oklch(95.3% 0.051 180.801);
    --color-teal-200: oklch(91% 0.096 180.426);
    --color-teal-300: oklch(85.5% 0.138 181.071);
    --color-teal-400: oklch(77.7% 0.152 181.912);
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --color-teal-600: oklch(60% 0.118 184.704);
    --color-teal-700: oklch(51.1% 0.096 186.391);
    --color-teal-800: oklch(43.7% 0.078 188.216);
    --color-teal-900: oklch(38.6% 0.063 188.416);
    --color-teal-950: oklch(27.7% 0.046 192.524);
    --color-cyan-50: oklch(98.4% 0.019 200.873);
    --color-cyan-100: oklch(95.6% 0.045 203.388);
    --color-cyan-200: oklch(91.7% 0.08 205.041);
    --color-cyan-300: oklch(86.5% 0.127 207.078);
    --color-cyan-400: oklch(78.9% 0.154 211.53);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-cyan-600: oklch(60.9% 0.126 221.723);
    --color-cyan-700: oklch(52% 0.105 223.128);
    --color-cyan-800: oklch(45% 0.085 224.283);
    --color-cyan-900: oklch(39.8% 0.07 227.392);
    --color-cyan-950: oklch(30.2% 0.056 229.695);
    --color-sky-50: oklch(97.7% 0.013 236.62);
    --color-sky-100: oklch(95.1% 0.026 236.824);
    --color-sky-200: oklch(90.1% 0.058 230.902);
    --color-sky-300: oklch(82.8% 0.111 230.318);
    --color-sky-400: oklch(74.6% 0.16 232.661);
    --color-sky-500: oklch(68.5% 0.169 237.323);
    --color-sky-600: oklch(58.8% 0.158 241.966);
    --color-sky-700: oklch(50% 0.134 242.749);
    --color-sky-800: oklch(44.3% 0.11 240.79);
    --color-sky-900: oklch(39.1% 0.09 240.876);
    --color-sky-950: oklch(29.3% 0.066 243.157);
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-blue-950: oklch(28.2% 0.091 267.935);
    --color-indigo-50: oklch(96.2% 0.018 272.314);
    --color-indigo-100: oklch(93% 0.034 272.788);
    --color-indigo-200: oklch(87% 0.065 274.039);
    --color-indigo-300: oklch(78.5% 0.115 274.713);
    --color-indigo-400: oklch(67.3% 0.182 276.935);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-indigo-700: oklch(45.7% 0.24 277.023);
    --color-indigo-800: oklch(39.8% 0.195 277.366);
    --color-indigo-900: oklch(35.9% 0.144 278.697);
    --color-indigo-950: oklch(25.7% 0.09 281.288);
    --color-violet-50: oklch(96.9% 0.016 293.756);
    --color-violet-100: oklch(94.3% 0.029 294.588);
    --color-violet-200: oklch(89.4% 0.057 293.283);
    --color-violet-300: oklch(81.1% 0.111 293.571);
    --color-violet-400: oklch(70.2% 0.183 293.541);
    --color-violet-500: oklch(60.6% 0.25 292.717);
    --color-violet-600: oklch(54.1% 0.281 293.009);
    --color-violet-700: oklch(49.1% 0.27 292.581);
    --color-violet-800: oklch(43.2% 0.232 292.759);
    --color-violet-900: oklch(38% 0.189 293.745);
    --color-violet-950: oklch(28.3% 0.141 291.089);
    --color-purple-50: oklch(97.7% 0.014 308.299);
    --color-purple-100: oklch(94.6% 0.033 307.174);
    --color-purple-200: oklch(90.2% 0.063 306.703);
    --color-purple-300: oklch(82.7% 0.119 306.383);
    --color-purple-400: oklch(71.4% 0.203 305.504);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-purple-700: oklch(49.6% 0.265 301.924);
    --color-purple-800: oklch(43.8% 0.218 303.724);
    --color-purple-900: oklch(38.1% 0.176 304.987);
    --color-purple-950: oklch(29.1% 0.149 302.717);
    --color-fuchsia-50: oklch(97.7% 0.017 320.058);
    --color-fuchsia-100: oklch(95.2% 0.037 318.852);
    --color-fuchsia-200: oklch(90.3% 0.076 319.62);
    --color-fuchsia-300: oklch(83.3% 0.145 321.434);
    --color-fuchsia-400: oklch(74% 0.238 322.16);
    --color-fuchsia-500: oklch(66.7% 0.295 322.15);
    --color-fuchsia-600: oklch(59.1% 0.293 322.896);
    --color-fuchsia-700: oklch(51.8% 0.253 323.949);
    --color-fuchsia-800: oklch(45.2% 0.211 324.591);
    --color-fuchsia-900: oklch(40.1% 0.17 325.612);
    --color-fuchsia-950: oklch(29.3% 0.136 325.661);
    --color-pink-50: oklch(97.1% 0.014 343.198);
    --color-pink-100: oklch(94.8% 0.028 342.258);
    --color-pink-200: oklch(89.9% 0.061 343.231);
    --color-pink-300: oklch(82.3% 0.12 346.018);
    --color-pink-400: oklch(71.8% 0.202 349.761);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-pink-700: oklch(52.5% 0.223 3.958);
    --color-pink-800: oklch(45.9% 0.187 3.815);
    --color-pink-900: oklch(40.8% 0.153 2.432);
    --color-pink-950: oklch(28.4% 0.109 3.907);
    --color-rose-50: oklch(96.9% 0.015 12.422);
    --color-rose-100: oklch(94.1% 0.03 12.58);
    --color-rose-200: oklch(89.2% 0.058 10.001);
    --color-rose-300: oklch(81% 0.117 11.638);
    --color-rose-400: oklch(71.2% 0.194 13.428);
    --color-rose-500: oklch(64.5% 0.246 16.439);
    --color-rose-600: oklch(58.6% 0.253 17.585);
    --color-rose-700: oklch(51.4% 0.222 16.935);
    --color-rose-800: oklch(45.5% 0.188 13.697);
    --color-rose-900: oklch(41% 0.159 10.272);
    --color-rose-950: oklch(27.1% 0.105 12.094);
    --color-slate-50: oklch(98.4% 0.003 247.858);
    --color-slate-100: oklch(96.8% 0.007 247.896);
    --color-slate-200: oklch(92.9% 0.013 255.508);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-slate-400: oklch(70.4% 0.04 256.788);
    --color-slate-500: oklch(55.4% 0.046 257.417);
    --color-slate-600: oklch(44.6% 0.043 257.281);
    --color-slate-700: oklch(37.2% 0.044 257.287);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-slate-950: oklch(12.9% 0.042 264.695);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-gray-950: oklch(13% 0.028 261.692);
    --color-zinc-50: oklch(98.5% 0 0);
    --color-zinc-100: oklch(96.7% 0.001 286.375);
    --color-zinc-200: oklch(92% 0.004 286.32);
    --color-zinc-300: oklch(87.1% 0.006 286.286);
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-500: oklch(55.2% 0.016 285.938);
    --color-zinc-600: oklch(44.2% 0.017 285.786);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-zinc-950: oklch(14.1% 0.005 285.823);
    --color-neutral-50: oklch(98.5% 0 0);
    --color-neutral-100: oklch(97% 0 0);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-300: oklch(87% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-600: oklch(43.9% 0 0);
    --color-neutral-700: oklch(37.1% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-neutral-950: oklch(14.5% 0 0);
    --color-stone-50: oklch(98.5% 0.001 106.423);
    --color-stone-100: oklch(97% 0.001 106.424);
    --color-stone-200: oklch(92.3% 0.003 48.717);
    --color-stone-300: oklch(86.9% 0.005 56.366);
    --color-stone-400: oklch(70.9% 0.01 56.259);
    --color-stone-500: oklch(55.3% 0.013 58.071);
    --color-stone-600: oklch(44.4% 0.011 73.639);
    --color-stone-700: oklch(37.4% 0.01 67.558);
    --color-stone-800: oklch(26.8% 0.007 34.298);
    --color-stone-900: oklch(21.6% 0.006 56.043);
    --color-stone-950: oklch(14.7% 0.004 49.25);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-sm: 40rem;
    --breakpoint-md: 48rem;
    --breakpoint-lg: 64rem;
    --breakpoint-xl: 80rem;
    --breakpoint-2xl: 96rem;
    --container-3xs: 16rem;
    --container-2xs: 18rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: 1.5;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: 1.2;
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-thin: 100;
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --font-weight-black: 900;
    --tracking-tighter: -0.05em;
    --tracking-tight: -0.025em;
    --tracking-normal: 0em;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-normal: 1.5;
    --leading-relaxed: 1.625;
    --leading-loose: 2;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --radius-4xl: 2rem;
    --shadow-2xs: 0 1px #0000000d;
    --shadow-xs: 0 1px 2px 0 #0000000d;
    --shadow-sm: 0 1px 3px 0 #0000001a, 0 1px 2px -1px #0000001a;
    --shadow-md: 0 4px 6px -1px #0000001a, 0 2px 4px -2px #0000001a;
    --shadow-lg: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
    --shadow-xl: 0 20px 25px -5px #0000001a, 0 8px 10px -6px #0000001a;
    --shadow-2xl: 0 25px 50px -12px #00000040;
    --inset-shadow-2xs: inset 0 1px #0000000d;
    --inset-shadow-xs: inset 0 1px 1px #0000000d;
    --inset-shadow-sm: inset 0 2px 4px #0000000d;
    --drop-shadow-xs: 0 1px 1px #0000000d;
    --drop-shadow-sm: 0 1px 2px #00000026;
    --drop-shadow-md: 0 3px 3px #0000001f;
    --drop-shadow-lg: 0 4px 4px #00000026;
    --drop-shadow-xl: 0 9px 7px #0000001a;
    --drop-shadow-2xl: 0 25px 25px #00000026;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-xs: 4px;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --blur-xl: 24px;
    --blur-2xl: 40px;
    --blur-3xl: 64px;
    --perspective-dramatic: 100px;
    --perspective-near: 300px;
    --perspective-normal: 500px;
    --perspective-midrange: 800px;
    --perspective-distant: 1200px;
    --aspect-video: 16/9;
    --default-transition-duration: 0.15s;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *,
  :after,
  :before,
  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  html,
  :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji"
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      "Liberation Mono",
      "Courier New",
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    vertical-align: middle;
    display: block;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not ((-webkit-appearance: -apple-pay-button))) or
    (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }
    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }
  ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button {
    height: auto;
  }
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
  :where(:root),
  :root:has(input.theme-controller[value="light"]:checked),
  [data-theme="light"] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  @media (prefers-color-scheme: dark) {
    :root:not([data-theme]) {
      color-scheme: dark;
      --color-base-100: oklch(25.33% 0.016 252.42);
      --color-base-200: oklch(23.26% 0.014 253.1);
      --color-base-300: oklch(21.15% 0.012 254.09);
      --color-base-content: oklch(97.807% 0.029 256.847);
      --color-primary: oklch(58% 0.233 277.117);
      --color-primary-content: oklch(96% 0.018 272.314);
      --color-secondary: oklch(65% 0.241 354.308);
      --color-secondary-content: oklch(94% 0.028 342.258);
      --color-accent: oklch(77% 0.152 181.912);
      --color-accent-content: oklch(38% 0.063 188.416);
      --color-neutral: oklch(14% 0.005 285.823);
      --color-neutral-content: oklch(92% 0.004 286.32);
      --color-info: oklch(74% 0.16 232.661);
      --color-info-content: oklch(29% 0.066 243.157);
      --color-success: oklch(76% 0.177 163.223);
      --color-success-content: oklch(37% 0.077 168.94);
      --color-warning: oklch(82% 0.189 84.429);
      --color-warning-content: oklch(41% 0.112 45.904);
      --color-error: oklch(71% 0.194 13.428);
      --color-error-content: oklch(27% 0.105 12.094);
      --radius-selector: 0.5rem;
      --radius-field: 0.25rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }
  }
  :root:has(input.theme-controller[value="light"]:checked),
  [data-theme="light"] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  :root:has(input.theme-controller[value="dark"]:checked),
  [data-theme="dark"] {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 200 200'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='200' height='200' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
    scrollbar-color: currentColor #0000;
  }
  @supports (color: color-mix(in lab, red, red)) {
    :root {
      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
    }
  }
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
  :root:has(
    .modal-open,
    .modal[open],
    .modal:target,
    .modal-toggle:checked,
    .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked
  ) {
    overflow: hidden;
  }
  :where(
    :root:has(
      .modal-open,
      .modal[open],
      .modal:target,
      .modal-toggle:checked,
      .drawer:not(.drawer-open) > .drawer-toggle:checked
    )
  ) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(
      var(--color-base-100),
      var(--color-base-100)
    );
    --root-bg: var(--color-base-100);
  }
  @supports (color: color-mix(in lab, red, red)) {
    :where(
      :root:has(
        .modal-open,
        .modal[open],
        .modal:target,
        .modal-toggle:checked,
        .drawer:not(.drawer-open) > .drawer-toggle:checked
      )
    ) {
      --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
    }
  }
  :where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(
    .modal-start,
    .modal-end
  ) {
    scrollbar-gutter: stable;
  }
  :root,
  [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@layer components;
@layer utilities {
  .diff {
    webkit-user-select: none;
    -webkit-user-select: none;
    user-select: none;
    direction: ltr;
    grid-template-rows: 1fr 1.8rem 1fr;
    grid-template-columns: auto 1fr;
    width: 100%;
    display: grid;
    position: relative;
    overflow: hidden;
    container-type: inline-size;
  }
  .diff:focus-visible,
  .diff:has(.diff-item-1:focus-visible) {
    outline-style: var(--tw-outline-style);
    outline-offset: 1px;
    outline-width: 2px;
    outline-color: var(--color-base-content);
  }
  .diff:focus-visible .diff-resizer {
    min-width: 95cqi;
    max-width: 95cqi;
  }
  .diff:has(.diff-item-1:focus-visible) {
    outline-style: var(--tw-outline-style);
    outline-offset: 1px;
    outline-width: 2px;
  }
  .diff:has(.diff-item-1:focus-visible) .diff-resizer {
    min-width: 5cqi;
    max-width: 5cqi;
  }
  @supports (-webkit-overflow-scrolling: touch) and (overflow: -webkit-paged-x) {
    .diff:focus .diff-resizer {
      min-width: 5cqi;
      max-width: 5cqi;
    }
    .diff:has(.diff-item-1:focus) .diff-resizer {
      min-width: 95cqi;
      max-width: 95cqi;
    }
  }
  .menu {
    --menu-active-fg: var(--color-neutral-content);
    --menu-active-bg: var(--color-neutral);
    flex-flow: column wrap;
    width: fit-content;
    padding: 0.5rem;
    font-size: 0.875rem;
    display: flex;
  }
  .menu :where(li ul) {
    white-space: nowrap;
    margin-inline-start: 1rem;
    padding-inline-start: 0.5rem;
    position: relative;
  }
  .menu :where(li ul):before {
    background-color: var(--color-base-content);
    opacity: 0.1;
    width: var(--border);
    content: "";
    inset-inline-start: 0;
    position: absolute;
    top: 0.75rem;
    bottom: 0.75rem;
  }
  .menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none;
  }
  .menu :where(li:not(.menu-title) > :not(ul, details, .menu-title, .btn)),
  .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    border-radius: var(--radius-field);
    text-align: start;
    text-wrap: balance;
    -webkit-user-select: none;
    user-select: none;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: 0.5rem;
    padding-block: 0.375rem;
    padding-inline: 0.75rem;
    transition-property: color, background-color, box-shadow;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    display: grid;
  }
  .menu :where(li > details > summary) {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu :where(li > details > summary) {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }
  .menu :where(li > details > summary)::-webkit-details-marker {
    display: none;
  }
  :is(
    .menu :where(li > details > summary),
    .menu :where(li > .menu-dropdown-toggle)
  ):after {
    content: "";
    transform-origin: 50%;
    pointer-events: none;
    justify-self: flex-end;
    width: 0.375rem;
    height: 0.375rem;
    transition-property: rotate, translate;
    transition-duration: 0.2s;
    display: block;
    translate: 0 -1px;
    rotate: -135deg;
    box-shadow: inset 2px 2px;
  }
  .menu :where(li > details[open] > summary):after,
  .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
    translate: 0 1px;
    rotate: 45deg;
  }
  .menu
    :where(
      li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
      li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
    ):not(.menu-active, :active, .btn).menu-focus,
  .menu
    :where(
      li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
      li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
    ):not(.menu-active, :active, .btn):focus-visible {
    cursor: pointer;
    background-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .menu
      :where(
        li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
        li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
      ):not(.menu-active, :active, .btn).menu-focus,
    .menu
      :where(
        li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
        li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
      ):not(.menu-active, :active, .btn):focus-visible {
      background-color: color-mix(
        in oklab,
        var(--color-base-content) 10%,
        transparent
      );
    }
  }
  .menu
    :where(
      li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
      li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
    ):not(.menu-active, :active, .btn).menu-focus,
  .menu
    :where(
      li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
      li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
    ):not(.menu-active, :active, .btn):focus-visible {
    color: var(--color-base-content);
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu
      :where(
        li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
        li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
      ):not(.menu-active, :active, .btn).menu-focus,
    .menu
      :where(
        li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
        li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
      ):not(.menu-active, :active, .btn):focus-visible {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }
  .menu
    :where(
      li:not(.menu-title, .disabled)
        > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover,
      li:not(.menu-title, .disabled)
        > details
        > summary:not(.menu-title):not(.menu-active, :active, .btn):hover
    ) {
    cursor: pointer;
    background-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .menu
      :where(
        li:not(.menu-title, .disabled)
          > :not(ul, details, .menu-title):not(
            .menu-active,
            :active,
            .btn
          ):hover,
        li:not(.menu-title, .disabled)
          > details
          > summary:not(.menu-title):not(.menu-active, :active, .btn):hover
      ) {
      background-color: color-mix(
        in oklab,
        var(--color-base-content) 10%,
        transparent
      );
    }
  }
  .menu
    :where(
      li:not(.menu-title, .disabled)
        > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover,
      li:not(.menu-title, .disabled)
        > details
        > summary:not(.menu-title):not(.menu-active, :active, .btn):hover
    ) {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu
      :where(
        li:not(.menu-title, .disabled)
          > :not(ul, details, .menu-title):not(
            .menu-active,
            :active,
            .btn
          ):hover,
        li:not(.menu-title, .disabled)
          > details
          > summary:not(.menu-title):not(.menu-active, :active, .btn):hover
      ) {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }
  .menu
    :where(
      li:not(.menu-title, .disabled)
        > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover,
      li:not(.menu-title, .disabled)
        > details
        > summary:not(.menu-title):not(.menu-active, :active, .btn):hover
    ) {
    box-shadow:
      inset 0 1px #00000003,
      inset 0 -1px #ffffff03;
  }
  .menu :where(li:empty) {
    background-color: var(--color-base-content);
    opacity: 0.1;
    height: 1px;
    margin: 0.5rem 1rem;
  }
  .menu :where(li) {
    flex-flow: column wrap;
    flex-shrink: 0;
    align-items: stretch;
    display: flex;
    position: relative;
  }
  .menu :where(li) .badge {
    justify-self: flex-end;
  }
  .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
  .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
  .menu :where(li) > details > summary:active {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
    .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
    .menu :where(li) > details > summary:active {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }
  .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
  .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
  .menu :where(li) > details > summary:active {
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }
  :is(
    .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
    .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
    .menu :where(li) > details > summary:active
  ):not(
    :is(
      .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
      .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
      .menu :where(li) > details > summary:active
    ):active
  ) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }
  .menu :where(li).menu-disabled {
    pointer-events: none;
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li).menu-disabled {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .menu .dropdown:focus-within .menu-dropdown-toggle:after {
    translate: 0 1px;
    rotate: 45deg;
  }
  .menu .dropdown-content {
    margin-top: 0.5rem;
    padding: 0.5rem;
  }
  .menu .dropdown-content:before {
    display: none;
  }
  :where(.btn) {
    width: unset;
  }
  .btn {
    cursor: pointer;
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    -webkit-user-select: none;
    user-select: none;
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    --tw-prose-links: var(--btn-fg);
    height: var(--size);
    font-size: var(--fontsize, 0.875rem);
    outline-color: var(--btn-color, var(--color-base-content));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
    touch-action: manipulation;
    box-shadow:
      0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset,
      var(--btn-shadow);
    --size: calc(var(--size-field, 0.25rem) * 10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-p: 1rem;
    --btn-border: var(--btn-bg);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    flex-wrap: nowrap;
    flex-shrink: 0;
    justify-content: center;
    align-items: center;
    gap: 0.375rem;
    font-weight: 600;
    transition-property: color, background-color, border-color, box-shadow;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    display: inline-flex;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn {
      --btn-border: color-mix(
        in oklab,
        var(--btn-bg),
        #000 calc(var(--depth) * 5%)
      );
    }
  }
  .btn {
    --btn-shadow: 0 3px 2px -2px var(--btn-bg), 0 4px 3px -2px var(--btn-bg);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn {
      --btn-shadow:
        0 3px 2px -2px
          color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
        0 4px 3px -2px
          color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
    }
  }
  .btn {
    --btn-noise: var(--fx-noise);
  }
  .prose .btn {
    text-decoration-line: none;
  }
  @media (hover: hover) {
    .btn:hover {
      --btn-bg: var(--btn-color, var(--color-base-200));
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn:hover {
        --btn-bg: color-mix(
          in oklab,
          var(--btn-color, var(--color-base-200)),
          #000 7%
        );
      }
    }
  }
  .btn:focus-visible,
  .btn:has(:focus-visible) {
    isolation: isolate;
    outline-width: 2px;
    outline-style: solid;
  }
  .btn:active:not(.btn-active) {
    --btn-bg: var(--btn-color, var(--color-base-200));
    translate: 0 0.5px;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:active:not(.btn-active) {
      --btn-bg: color-mix(
        in oklab,
        var(--btn-color, var(--color-base-200)),
        #000 5%
      );
    }
  }
  .btn:active:not(.btn-active) {
    --btn-border: var(--btn-color, var(--color-base-200));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:active:not(.btn-active) {
      --btn-border: color-mix(
        in oklab,
        var(--btn-color, var(--color-base-200)),
        #000 7%
      );
    }
  }
  .btn:active:not(.btn-active) {
    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
  }
  .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
    background-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
      background-color: color-mix(
        in oklab,
        var(--color-base-content) 10%,
        transparent
      );
    }
  }
  .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
    box-shadow: none;
  }
  .btn:is(:disabled, [disabled], .btn-disabled) {
    pointer-events: none;
    --btn-border: #0000;
    --btn-noise: none;
    --btn-fg: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:is(:disabled, [disabled], .btn-disabled) {
      --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
    }
  }
  @media (hover: hover) {
    .btn:is(:disabled, [disabled], .btn-disabled):hover {
      pointer-events: none;
      background-color: var(--color-neutral);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn:is(:disabled, [disabled], .btn-disabled):hover {
        background-color: color-mix(
          in oklab,
          var(--color-neutral) 20%,
          transparent
        );
      }
    }
    .btn:is(:disabled, [disabled], .btn-disabled):hover {
      --btn-border: #0000;
      --btn-fg: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn:is(:disabled, [disabled], .btn-disabled):hover {
        --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
    }
  }
  .btn:is(input[type="checkbox"], input[type="radio"]) {
    appearance: none;
  }
  .btn:is(input[type="checkbox"], input[type="radio"]):after {
    content: attr(aria-label);
  }
  .btn:where(input:checked:not(.filter .btn)) {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
    isolation: isolate;
  }
  .list {
    flex-direction: column;
    font-size: 0.875rem;
    display: flex;
  }
  .list :where(.list-row) {
    --list-grid-cols: minmax(0, auto) 1fr;
    border-radius: var(--radius-box);
    word-break: break-word;
    grid-auto-flow: column;
    grid-template-columns: var(--list-grid-cols);
    gap: 1rem;
    padding: 1rem;
    display: grid;
    position: relative;
  }
  .list :where(.list-row):has(.list-col-grow:first-child) {
    --list-grid-cols: 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(2)) {
    --list-grid-cols: minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(3)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(4)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(5)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto)
      minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(6)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto)
      minmax(0, auto) minmax(0, auto) 1fr;
  }
  .list :where(.list-row) :not(.list-col-wrap) {
    grid-row-start: 1;
  }
  :is(
    .list > :not(:last-child).list-row,
    .list > :not(:last-child) .list-row
  ):after {
    content: "";
    border-bottom: var(--border) solid;
    inset-inline: var(--radius-box);
    border-color: var(--color-base-content);
    position: absolute;
    bottom: 0;
  }
  @supports (color: color-mix(in lab, red, red)) {
    :is(
      .list > :not(:last-child).list-row,
      .list > :not(:last-child) .list-row
    ):after {
      border-color: color-mix(
        in oklab,
        var(--color-base-content) 5%,
        transparent
      );
    }
  }
  .input {
    cursor: text;
    border: var(--border) solid #0000;
    appearance: none;
    background-color: var(--color-base-100);
    vertical-align: middle;
    white-space: nowrap;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    touch-action: manipulation;
    border-color: var(--input-color);
    box-shadow:
      0 1px var(--input-color) inset,
      0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    flex-shrink: 1;
    align-items: center;
    gap: 0.5rem;
    padding-inline: 0.75rem;
    font-size: 0.875rem;
    display: inline-flex;
    position: relative;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input {
      box-shadow:
        0 1px
          color-mix(
            in oklab,
            var(--input-color) calc(var(--depth) * 10%),
            #0000
          )
          inset,
        0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
  }
  .input {
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
  }
  .input:where(input) {
    display: inline-flex;
  }
  .input :where(input) {
    appearance: none;
    background-color: #0000;
    border: none;
    width: 100%;
    height: 100%;
    display: inline-flex;
  }
  .input :where(input):focus,
  .input :where(input):focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .input :where(input):focus,
    .input :where(input):focus-within {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }
  .input :where(input[type="url"]),
  .input :where(input[type="email"]) {
    direction: ltr;
  }
  .input :where(input[type="date"]) {
    display: inline-flex;
  }
  .input:focus,
  .input:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input:focus,
    .input:focus-within {
      box-shadow: 0 1px
        color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
    }
  }
  .input:focus,
  .input:focus-within {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
    z-index: 1;
  }
  .input:has(> input[disabled]),
  .input:is(:disabled, [disabled]),
  fieldset:disabled .input {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input:has(> input[disabled]),
    .input:is(:disabled, [disabled]),
    fieldset:disabled .input {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }
  :is(
    .input:has(> input[disabled]),
    .input:is(:disabled, [disabled]),
    fieldset:disabled .input
  )::placeholder {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    :is(
      .input:has(> input[disabled]),
      .input:is(:disabled, [disabled]),
      fieldset:disabled .input
    )::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .input:has(> input[disabled]),
  .input:is(:disabled, [disabled]),
  fieldset:disabled .input {
    box-shadow: none;
  }
  .input:has(> input[disabled]) > input[disabled] {
    cursor: not-allowed;
  }
  .input::-webkit-date-and-time-value {
    text-align: inherit;
  }
  .input[type="number"]::-webkit-inner-spin-button {
    margin-block: -0.75rem;
    margin-inline-end: -0.75rem;
  }
  .input::-webkit-calendar-picker-indicator {
    position: absolute;
    inset-inline-end: 0.75em;
  }
  .input:has(> input[type="date"]) :where(input[type="date"]) {
    webkit-appearance: none;
    appearance: none;
    display: inline-flex;
  }
  .input:has(> input[type="date"])
    input[type="date"]::-webkit-calendar-picker-indicator {
    cursor: pointer;
    width: 1em;
    height: 1em;
    position: absolute;
    inset-inline-end: 0.75em;
  }
  .table {
    border-radius: var(--radius-box);
    text-align: left;
    width: 100%;
    font-size: 0.875rem;
    position: relative;
  }
  .table:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    text-align: right;
  }
  @media (hover: hover) {
    :is(.table tr.row-hover, .table tr.row-hover:nth-child(2n)):hover {
      background-color: var(--color-base-200);
    }
  }
  .table :where(th, td) {
    vertical-align: middle;
    padding-block: 0.75rem;
    padding-inline: 1rem;
  }
  .table :where(thead, tfoot) {
    white-space: nowrap;
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .table :where(thead, tfoot) {
      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    }
  }
  .table :where(thead, tfoot) {
    font-size: 0.875rem;
    font-weight: 600;
  }
  .table :where(tfoot) {
    border-top: var(--border) solid var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .table :where(tfoot) {
      border-top: var(--border) solid
        color-mix(in oklch, var(--color-base-content) 5%, #0000);
    }
  }
  .table :where(.table-pin-rows thead tr) {
    z-index: 1;
    background-color: var(--color-base-100);
    position: sticky;
    top: 0;
  }
  .table :where(.table-pin-rows tfoot tr) {
    z-index: 1;
    background-color: var(--color-base-100);
    position: sticky;
    bottom: 0;
  }
  .table :where(.table-pin-cols tr th) {
    background-color: var(--color-base-100);
    position: sticky;
    left: 0;
    right: 0;
  }
  .table :where(thead tr, tbody tr:not(:last-child)) {
    border-bottom: var(--border) solid var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .table :where(thead tr, tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid
        color-mix(in oklch, var(--color-base-content) 5%, #0000);
    }
  }
  .range {
    appearance: none;
    webkit-appearance: none;
    --range-thumb: var(--color-base-100);
    --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
    --range-progress: currentColor;
    --range-fill: 1;
    --range-p: 0.25rem;
    --range-bg: currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .range {
      --range-bg: color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .range {
    cursor: pointer;
    vertical-align: middle;
    --radius-selector-max: calc(
      var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
    );
    border-radius: calc(
      var(--radius-selector) + min(var(--range-p), var(--radius-selector-max))
    );
    width: clamp(3rem, 20rem, 100%);
    height: var(--range-thumb-size);
    background-color: #0000;
    border: none;
    overflow: hidden;
  }
  [dir="rtl"] .range {
    --range-dir: -1;
  }
  .range:focus {
    outline: none;
  }
  .range:focus-visible {
    outline-offset: 2px;
    outline: 2px solid;
  }
  .range::-webkit-slider-runnable-track {
    background-color: var(--range-bg);
    border-radius: var(--radius-selector);
    width: 100%;
    height: calc(var(--range-thumb-size) * 0.5);
  }
  @media (forced-colors: active) {
    .range::-webkit-slider-runnable-track {
      border: 1px solid;
    }
    .range::-moz-range-track {
      border: 1px solid;
    }
  }
  .range::-webkit-slider-thumb {
    box-sizing: border-box;
    border-radius: calc(
      var(--radius-selector) + min(var(--range-p), var(--radius-selector-max))
    );
    height: var(--range-thumb-size);
    width: var(--range-thumb-size);
    border: var(--range-p) solid;
    appearance: none;
    webkit-appearance: none;
    color: var(--range-progress);
    box-shadow:
      0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
      0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
      0 1px currentColor,
      0 0 0 2rem var(--range-thumb) inset,
      calc(
          (var(--range-dir, 1) * -100rem) -
            (var(--range-dir, 1) * var(--range-thumb-size) / 2)
        )
        0 0 calc(100rem * var(--range-fill));
    background-color: currentColor;
    position: relative;
    top: 50%;
    transform: translateY(-50%);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .range::-webkit-slider-thumb {
      box-shadow:
        0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
        0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
        0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000),
        0 0 0 2rem var(--range-thumb) inset,
        calc(
            (var(--range-dir, 1) * -100rem) -
              (var(--range-dir, 1) * var(--range-thumb-size) / 2)
          )
          0 0 calc(100rem * var(--range-fill));
    }
  }
  .range::-moz-range-track {
    background-color: var(--range-bg);
    border-radius: var(--radius-selector);
    width: 100%;
    height: calc(var(--range-thumb-size) * 0.5);
  }
  .range::-moz-range-thumb {
    box-sizing: border-box;
    border-radius: calc(
      var(--radius-selector) + min(var(--range-p), var(--radius-selector-max))
    );
    height: var(--range-thumb-size);
    width: var(--range-thumb-size);
    border: var(--range-p) solid;
    color: var(--range-progress);
    box-shadow:
      0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
      0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
      0 1px currentColor,
      0 0 0 2rem var(--range-thumb) inset,
      calc(
          (var(--range-dir, 1) * -100rem) -
            (var(--range-dir, 1) * var(--range-thumb-size) / 2)
        )
        0 0 calc(100rem * var(--range-fill));
    background-color: currentColor;
    position: relative;
    top: 50%;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .range::-moz-range-thumb {
      box-shadow:
        0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
        0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
        0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000),
        0 0 0 2rem var(--range-thumb) inset,
        calc(
            (var(--range-dir, 1) * -100rem) -
              (var(--range-dir, 1) * var(--range-thumb-size) / 2)
          )
          0 0 calc(100rem * var(--range-fill));
    }
  }
  .range:disabled {
    cursor: not-allowed;
    opacity: 0.3;
  }
  .progress {
    appearance: none;
    border-radius: var(--radius-box);
    background-color: currentColor;
    width: 100%;
    height: 0.5rem;
    position: relative;
    overflow: hidden;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .progress {
      background-color: color-mix(in oklab, currentcolor 20%, transparent);
    }
  }
  .progress {
    color: var(--color-base-content);
  }
  .progress:indeterminate {
    background-image: repeating-linear-gradient(
      90deg,
      currentColor -1% 10%,
      #0000 10% 90%
    );
    background-position-x: 15%;
    background-size: 200%;
  }
  @media (prefers-reduced-motion: no-preference) {
    .progress:indeterminate {
      animation: 5s ease-in-out infinite progress;
    }
  }
  @supports ((-moz-appearance: none)) {
    .progress:indeterminate::-moz-progress-bar {
      background-color: #0000;
    }
    @media (prefers-reduced-motion: no-preference) {
      .progress:indeterminate::-moz-progress-bar {
        background-image: repeating-linear-gradient(
          90deg,
          currentColor -1% 10%,
          #0000 10% 90%
        );
        background-position-x: 15%;
        background-size: 200%;
        animation: 5s ease-in-out infinite progress;
      }
    }
    .progress::-moz-progress-bar {
      border-radius: var(--radius-box);
      background-color: currentColor;
    }
  }
  @supports ((-webkit-appearance: none)) {
    .progress::-webkit-progress-bar {
      border-radius: var(--radius-box);
      background-color: #0000;
    }
    .progress::-webkit-progress-value {
      border-radius: var(--radius-box);
      background-color: currentColor;
    }
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-\[-1px\] {
    top: -1px;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .textarea {
    border: var(--border) solid #0000;
    appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    vertical-align: middle;
    touch-action: manipulation;
    border-color: var(--input-color);
    width: clamp(3rem, 20rem, 100%);
    min-height: 5rem;
    box-shadow:
      0 1px var(--input-color) inset,
      0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    flex-shrink: 1;
    padding-block: 0.5rem;
    padding-inline: 0.75rem;
    font-size: 0.875rem;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea {
      box-shadow:
        0 1px
          color-mix(
            in oklab,
            var(--input-color) calc(var(--depth) * 10%),
            #0000
          )
          inset,
        0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
  }
  .textarea {
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
  }
  .textarea textarea {
    appearance: none;
    background-color: #0000;
    border: none;
  }
  .textarea textarea:focus,
  .textarea textarea:focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .textarea textarea:focus,
    .textarea textarea:focus-within {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }
  .textarea:focus,
  .textarea:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea:focus,
    .textarea:focus-within {
      box-shadow: 0 1px
        color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
    }
  }
  .textarea:focus,
  .textarea:focus-within {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
  }
  .textarea:has(> textarea[disabled]),
  .textarea:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea:has(> textarea[disabled]),
    .textarea:is(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }
  :is(
    .textarea:has(> textarea[disabled]),
    .textarea:is(:disabled, [disabled])
  )::placeholder {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    :is(
      .textarea:has(> textarea[disabled]),
      .textarea:is(:disabled, [disabled])
    )::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .textarea:has(> textarea[disabled]),
  .textarea:is(:disabled, [disabled]) {
    box-shadow: none;
  }
  .textarea:has(> textarea[disabled]) > textarea[disabled] {
    cursor: not-allowed;
  }
  .stack {
    grid-template-rows: 3px 4px 1fr 4px 3px;
    grid-template-columns: 3px 4px 1fr 4px 3px;
    display: inline-grid;
  }
  .stack > * {
    width: 100%;
    height: 100%;
  }
  .stack > :nth-child(n + 2) {
    opacity: 0.7;
    width: 100%;
  }
  .stack > :nth-child(2) {
    z-index: 2;
    opacity: 0.9;
  }
  .stack > :first-child {
    z-index: 3;
    width: 100%;
  }
  :is(.stack, .stack.stack-bottom) > * {
    grid-area: 3/3/6/4;
  }
  :is(.stack, .stack.stack-bottom) > :nth-child(2) {
    grid-area: 2/2/5/5;
  }
  :is(.stack, .stack.stack-bottom) > :first-child {
    grid-area: 1/1/4/6;
  }
  .stack.stack-top > * {
    grid-area: 1/3/4/4;
  }
  .stack.stack-top > :nth-child(2) {
    grid-area: 2/2/5/5;
  }
  .stack.stack-top > :first-child {
    grid-area: 3/1/6/6;
  }
  .stack.stack-start > * {
    grid-area: 3/1/4/4;
  }
  .stack.stack-start > :nth-child(2) {
    grid-area: 2/2/5/5;
  }
  .stack.stack-start > :first-child {
    grid-area: 1/3/6/6;
  }
  .stack.stack-end > * {
    grid-area: 3/3/4/6;
  }
  .stack.stack-end > :nth-child(2) {
    grid-area: 2/2/5/5;
  }
  .stack.stack-end > :first-child {
    grid-area: 1/1/6/4;
  }
  .-z-10 {
    z-index: -10;
  }
  .z-0 {
    z-index: 0;
  }
  .z-50 {
    z-index: 50;
  }
  .container {
    width: 100%;
  }
  @media (min-width: 40rem) {
    .container {
      max-width: 40rem;
    }
  }
  @media (min-width: 48rem) {
    .container {
      max-width: 48rem;
    }
  }
  @media (min-width: 64rem) {
    .container {
      max-width: 64rem;
    }
  }
  @media (min-width: 80rem) {
    .container {
      max-width: 80rem;
    }
  }
  @media (min-width: 96rem) {
    .container {
      max-width: 96rem;
    }
  }
  .filter {
    flex-wrap: wrap;
    display: flex;
  }
  .filter input[type="radio"] {
    width: auto;
  }
  .filter input {
    opacity: 1;
    transition:
      margin 0.1s,
      opacity 0.3s,
      padding 0.3s,
      border-width 0.1s;
    overflow: hidden;
    scale: 1;
  }
  .filter input:not(:last-child) {
    margin-inline-end: 0.25rem;
  }
  .filter input.filter-reset {
    aspect-ratio: 1;
  }
  .filter input.filter-reset:after {
    content: "×";
  }
  .filter:not(:has(input:checked:not(.filter-reset))) .filter-reset,
  .filter:not(:has(input:checked:not(.filter-reset))) input[type="reset"],
  .filter:has(input:checked:not(.filter-reset))
    input:not(:checked, .filter-reset, input[type="reset"]) {
    opacity: 0;
    border-width: 0;
    width: 0;
    margin-inline: 0;
    padding-inline: 0;
    scale: 0;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .input-lg {
    --size: calc(var(--size-field, 0.25rem) * 12);
    font-size: 1.125rem;
  }
  .input-lg[type="number"]::-webkit-inner-spin-button {
    margin-block: -0.75rem;
    margin-inline-end: -0.75rem;
  }
  .input-md {
    --size: calc(var(--size-field, 0.25rem) * 10);
    font-size: 0.875rem;
  }
  .input-md[type="number"]::-webkit-inner-spin-button {
    margin-block: -0.75rem;
    margin-inline-end: -0.75rem;
  }
  .input-sm {
    --size: calc(var(--size-field, 0.25rem) * 8);
    font-size: 0.75rem;
  }
  .input-sm[type="number"]::-webkit-inner-spin-button {
    margin-block: -0.5rem;
    margin-inline-end: -0.75rem;
  }
  .input-xl {
    --size: calc(var(--size-field, 0.25rem) * 14);
    font-size: 1.375rem;
  }
  .input-xl[type="number"]::-webkit-inner-spin-button {
    margin-block: -1rem;
    margin-inline-end: -0.75rem;
  }
  .input-xs {
    --size: calc(var(--size-field, 0.25rem) * 6);
    font-size: 0.6875rem;
  }
  .input-xs[type="number"]::-webkit-inner-spin-button {
    margin-block: -0.25rem;
    margin-inline-end: -0.75rem;
  }
  .label {
    white-space: nowrap;
    color: currentColor;
    align-items: center;
    gap: 0.375rem;
    display: inline-flex;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .label {
      color: color-mix(in oklab, currentcolor 60%, transparent);
    }
  }
  .label:has(input) {
    cursor: pointer;
  }
  .label:is(.input > *, .select > *) {
    white-space: nowrap;
    height: calc(100% - 0.5rem);
    font-size: inherit;
    align-items: center;
    padding-inline: 0.75rem;
    display: flex;
  }
  .label:is(.input > *, .select > *):first-child {
    border-inline-end: var(--border) solid currentColor;
    margin-inline: -0.75rem 0.75rem;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .label:is(.input > *, .select > *):first-child {
      border-inline-end: var(--border) solid
        color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .label:is(.input > *, .select > *):last-child {
    border-inline-start: var(--border) solid currentColor;
    margin-inline: 0.75rem -0.75rem;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .label:is(.input > *, .select > *):last-child {
      border-inline-start: var(--border) solid
        color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .-mt-5 {
    margin-top: calc(var(--spacing) * -5);
  }
  .-mt-\[4\.9rem\] {
    margin-top: -4.9rem;
  }
  .mr-6 {
    margin-right: calc(var(--spacing) * 6);
  }
  .fieldset-legend {
    color: var(--color-base-content);
    justify-content: space-between;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: -0.25rem;
    padding-block: 0.5rem;
    font-weight: 600;
    display: flex;
  }
  .-mb-px {
    margin-bottom: -1px;
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .-ml-8 {
    margin-left: calc(var(--spacing) * -8);
  }
  .-ml-px {
    margin-left: -1px;
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .badge {
    border-radius: var(--radius-selector);
    vertical-align: middle;
    color: var(--badge-fg);
    border: var(--border) solid var(--badge-color, var(--color-base-200));
    width: fit-content;
    padding-inline: calc(0.25rem * 3 - var(--border));
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    background-color: var(--badge-bg);
    --badge-bg: var(--badge-color, var(--color-base-100));
    --badge-fg: var(--color-base-content);
    --size: calc(var(--size-selector, 0.25rem) * 6);
    height: var(--size);
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    display: inline-flex;
  }
  .alert {
    border-radius: var(--radius-box);
    color: var(--color-base-content);
    background-color: var(--alert-color, var(--color-base-200));
    text-align: start;
    border: var(--border) solid var(--color-base-200);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    box-shadow:
      0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset,
      0 1px #000,
      0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    grid-template-columns: auto;
    grid-auto-flow: column;
    justify-content: start;
    place-items: center start;
    gap: 1rem;
    padding-block: 0.75rem;
    padding-inline: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    display: grid;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .alert {
      box-shadow:
        0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset,
        0 1px
          color-mix(
            in oklab,
            color-mix(
                in oklab,
                #000 20%,
                var(--alert-color, var(--color-base-200))
              )
              calc(var(--depth) * 20%),
            #0000
          ),
        0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    }
  }
  .alert:has(:nth-child(2)) {
    grid-template-columns: auto minmax(auto, 1fr);
  }
  .alert.alert-outline {
    color: var(--alert-color);
    box-shadow: none;
    background-color: #0000;
    background-image: none;
  }
  .alert.alert-dash {
    color: var(--alert-color);
    box-shadow: none;
    background-color: #0000;
    background-image: none;
    border-style: dashed;
  }
  .alert.alert-soft {
    color: var(--alert-color, var(--color-base-content));
    background: var(--alert-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .alert.alert-soft {
      background: color-mix(
        in oklab,
        var(--alert-color, var(--color-base-content)) 8%,
        var(--color-base-100)
      );
    }
  }
  .alert.alert-soft {
    border-color: var(--alert-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .alert.alert-soft {
      border-color: color-mix(
        in oklab,
        var(--alert-color, var(--color-base-content)) 10%,
        var(--color-base-100)
      );
    }
  }
  .alert.alert-soft {
    box-shadow: none;
    background-image: none;
  }
  .fieldset {
    grid-template-columns: 1fr;
    grid-auto-rows: max-content;
    gap: 0.375rem;
    padding-block: 0.25rem;
    font-size: 0.75rem;
    display: grid;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .aspect-\[335\/376\] {
    aspect-ratio: 335/376;
  }
  .btn-circle {
    width: var(--size);
    height: var(--size);
    border-radius: 3.40282e38px;
    padding-inline: 0;
  }
  .btn-square {
    width: var(--size);
    height: var(--size);
    padding-inline: 0;
  }
  .size-2 {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-1\.5 {
    height: calc(var(--spacing) * 1.5);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-2\.5 {
    height: calc(var(--spacing) * 2.5);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-11 {
    height: calc(var(--spacing) * 11);
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-14\.5 {
    height: calc(var(--spacing) * 14.5);
  }
  .h-\[18px\] {
    height: 18px;
  }
  .h-\[56px\] {
    height: 56px;
  }
  .h-dvh {
    height: 100dvh;
  }
  .min-h-dvh {
    min-height: 100dvh;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .btn-wide {
    width: 100%;
    max-width: 16rem;
  }
  .btn-block {
    width: 100%;
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\.5 {
    width: calc(var(--spacing) * 1.5);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-\[18px\] {
    width: 18px;
  }
  .w-\[448px\] {
    width: 448px;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-\[335px\] {
    max-width: 335px;
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-none {
    max-width: none;
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-5 {
    min-width: calc(var(--spacing) * 5);
  }
  .min-w-6 {
    min-width: calc(var(--spacing) * 6);
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink-0,
  .shrink-0 {
    flex-shrink: 0;
  }
  .grow {
    flex-grow: 1;
  }
  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,)
      var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .skeleton {
    border-radius: var(--radius-box);
    background-color: var(--color-base-300);
  }
  @media (prefers-reduced-motion: reduce) {
    .skeleton {
      transition-duration: 15s;
    }
  }
  .skeleton {
    will-change: background-position;
    background-image: linear-gradient(
      105deg,
      #0000 0% 40%,
      var(--color-base-100) 50%,
      #0000 60% 100%
    );
    background-position-x: -50%;
    background-repeat: no-repeat;
    background-size: 200%;
  }
  @media (prefers-reduced-motion: no-preference) {
    .skeleton {
      animation: 1.8s ease-in-out infinite skeleton;
    }
  }
  .link {
    cursor: pointer;
    text-decoration-line: underline;
  }
  .link:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .link:focus {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }
  .link:focus-visible {
    outline-offset: 2px;
    outline: 2px solid;
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-not-allowed\! {
    cursor: not-allowed !important;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-items-center {
    justify-items: center;
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 6) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-x-1 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 1) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  :where(.divide-x > :not(:last-child)) {
    --tw-divide-x-reverse: 0;
    border-inline-style: var(--tw-border-style);
    border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
    border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
  }
  :where(.divide-y > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
  :where(.divide-neutral-200 > :not(:last-child)) {
    border-color: var(--color-neutral-200);
  }
  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-full {
    border-radius: 3.40282e38px;
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-t-lg {
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
  }
  .rounded-l-md {
    border-top-left-radius: var(--radius-md);
    border-bottom-left-radius: var(--radius-md);
  }
  .rounded-r-md {
    border-top-right-radius: var(--radius-md);
    border-bottom-right-radius: var(--radius-md);
  }
  .rounded-b-lg {
    border-bottom-right-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }
  .rounded-br-lg {
    border-bottom-right-radius: var(--radius-lg);
  }
  .rounded-bl-lg {
    border-bottom-left-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-x {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .btn-dash:not(
    .btn-active,
    :hover,
    :active:focus,
    :focus-visible,
    :disabled,
    [disabled],
    .btn-disabled,
    :checked
  ) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-fg: var(--btn-color);
    --btn-border: var(--btn-color);
    --btn-noise: none;
    border-style: dashed;
  }
  @media (hover: none) {
    .btn-dash:hover:not(
        .btn-active,
        :active,
        :focus-visible,
        :disabled,
        [disabled],
        .btn-disabled,
        :checked
      ) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-fg: var(--btn-color);
      --btn-border: var(--btn-color);
      --btn-noise: none;
      border-style: dashed;
    }
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-dotted {
    --tw-border-style: dotted;
    border-style: dotted;
  }
  .input-ghost {
    box-shadow: none;
    background-color: #0000;
    border-color: #0000;
  }
  .input-ghost:focus,
  .input-ghost:focus-within {
    background-color: var(--color-base-100);
    color: var(--color-base-content);
    box-shadow: none;
    border-color: #0000;
  }
  .border-\[\#19140035\] {
    border-color: #19140035;
  }
  .border-\[\#e3e3e0\] {
    border-color: #e3e3e0;
  }
  .border-base-content\/5 {
    border-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-base-content\/5 {
      border-color: color-mix(
        in oklab,
        var(--color-base-content) 5%,
        transparent
      );
    }
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-neutral-100 {
    border-color: var(--color-neutral-100);
  }
  .border-neutral-200 {
    border-color: var(--color-neutral-200);
  }
  .border-neutral-300 {
    border-color: var(--color-neutral-300);
  }
  .border-transparent {
    border-color: #0000;
  }
  .table-zebra tbody tr:where(:nth-child(2n)),
  .table-zebra tbody tr:where(:nth-child(2n)) :where(.table-pin-cols tr th) {
    background-color: var(--color-base-200);
  }
  @media (hover: hover) {
    :is(
      .table-zebra tbody tr.row-hover,
      .table-zebra tbody tr.row-hover:where(:nth-child(2n))
    ):hover {
      background-color: var(--color-base-300);
    }
  }
  .bg-\[\#1b1b18\] {
    background-color: #1b1b18;
  }
  .bg-\[\#FDFDFC\] {
    background-color: #fdfdfc;
  }
  .bg-\[\#dbdbd7\] {
    background-color: #dbdbd7;
  }
  .bg-\[\#fff2f2\] {
    background-color: #fff2f2;
  }
  .bg-amber-200 {
    background-color: var(--color-amber-200);
  }
  .bg-amber-600 {
    background-color: var(--color-amber-600);
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .bg-black\/8 {
    background-color: #00000014;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/8 {
      background-color: color-mix(in oklab, var(--color-black) 8%, transparent);
    }
  }
  .bg-black\/10 {
    background-color: #0000001a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/10 {
      background-color: color-mix(
        in oklab,
        var(--color-black) 10%,
        transparent
      );
    }
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-blue-700 {
    background-color: var(--color-blue-700);
  }
  .bg-emerald-200 {
    background-color: var(--color-emerald-200);
  }
  .bg-emerald-600 {
    background-color: var(--color-emerald-600);
  }
  .bg-neutral-50 {
    background-color: var(--color-neutral-50);
  }
  .bg-neutral-600 {
    background-color: var(--color-neutral-600);
  }
  .bg-rose-200 {
    background-color: var(--color-rose-200);
  }
  .bg-rose-200\! {
    background-color: var(--color-rose-200) !important;
  }
  .bg-rose-500 {
    background-color: var(--color-rose-500);
  }
  .bg-rose-600 {
    background-color: var(--color-rose-600);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/5 {
    background-color: #ffffff0d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/5 {
      background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .bg-white\/\[2\%\] {
    background-color: #ffffff05;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/\[2\%\] {
      background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
    }
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-2\.5 {
    padding: calc(var(--spacing) * 2.5);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .table-lg :not(thead, tfoot) tr {
    font-size: 1.125rem;
  }
  .table-lg :where(th, td) {
    padding-block: 1rem;
    padding-inline: 1.25rem;
  }
  .table-md :not(thead, tfoot) tr {
    font-size: 0.875rem;
  }
  .table-md :where(th, td) {
    padding-block: 0.75rem;
    padding-inline: 1rem;
  }
  .table-sm :not(thead, tfoot) tr {
    font-size: 0.75rem;
  }
  .table-sm :where(th, td) {
    padding-block: 0.5rem;
    padding-inline: 0.75rem;
  }
  .table-xl :not(thead, tfoot) tr {
    font-size: 1.375rem;
  }
  .table-xl :where(th, td) {
    padding-block: 1.25rem;
    padding-inline: 1.5rem;
  }
  .table-xs :not(thead, tfoot) tr {
    font-size: 0.6875rem;
  }
  .table-xs :where(th, td) {
    padding-block: 0.25rem;
    padding-inline: 0.5rem;
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-\[6px\] {
    padding-inline: 6px;
  }
  .py-0 {
    padding-block: calc(var(--spacing) * 0);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-14 {
    padding-top: calc(var(--spacing) * 14);
  }
  .pr-2\.5 {
    padding-right: calc(var(--spacing) * 2.5);
  }
  .pb-0 {
    padding-bottom: calc(var(--spacing) * 0);
  }
  .pb-12 {
    padding-bottom: calc(var(--spacing) * 12);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-right {
    text-align: right;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-xs\/none {
    font-size: var(--text-xs);
    line-height: 1;
  }
  .text-\[13px\] {
    font-size: 13px;
  }
  .leading-3 {
    --tw-leading: calc(var(--spacing) * 3);
    line-height: calc(var(--spacing) * 3);
  }
  .leading-5 {
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
  }
  .leading-\[20px\] {
    --tw-leading: 20px;
    line-height: 20px;
  }
  .leading-normal {
    --tw-leading: var(--leading-normal);
    line-height: var(--leading-normal);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-\[\#1b1b18\] {
    color: #1b1b18;
  }
  .text-\[\#706f6c\] {
    color: #706f6c;
  }
  .text-\[\#F53003\],
  .text-\[\#f53003\] {
    color: #f53003;
  }
  .text-amber-900 {
    color: var(--color-amber-900);
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-blue-900 {
    color: var(--color-blue-900);
  }
  .text-emerald-500 {
    color: var(--color-emerald-500);
  }
  .text-emerald-900 {
    color: var(--color-emerald-900);
  }
  .text-error {
    color: var(--color-error);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-neutral-100 {
    color: var(--color-neutral-100);
  }
  .text-neutral-400 {
    color: var(--color-neutral-400);
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-neutral-500\! {
    color: var(--color-neutral-500) !important;
  }
  .text-neutral-600 {
    color: var(--color-neutral-600);
  }
  .text-neutral-800 {
    color: var(--color-neutral-800);
  }
  .text-neutral-900 {
    color: var(--color-neutral-900);
  }
  .text-neutral-950 {
    color: var(--color-neutral-950);
  }
  .text-rose-900 {
    color: var(--color-rose-900);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .btn-link {
    --btn-border: #0000;
    --btn-bg: #0000;
    --btn-fg: var(--color-primary);
    --btn-noise: none;
    --btn-shadow: "";
    outline-color: currentColor;
    text-decoration-line: underline;
  }
  .btn-link:is(.btn-active, :hover, :active:focus, :focus-visible) {
    --btn-border: #0000;
    --btn-bg: #0000;
    text-decoration-line: underline;
  }
  @media (hover: none) {
    .btn-link:hover:not(
        .btn-active,
        :active,
        :focus-visible,
        :disabled,
        [disabled],
        .btn-disabled
      ) {
      text-decoration-line: none;
    }
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-neutral-400 {
    -webkit-text-decoration-color: var(--color-neutral-400);
    text-decoration-color: var(--color-neutral-400);
  }
  .underline-offset-4 {
    text-underline-offset: 4px;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .scheme-light-dark {
    color-scheme: light dark;
  }
  .opacity-90 {
    opacity: 0.9;
  }
  .opacity-100 {
    opacity: 1;
  }
  .shadow-\[0px_0px_1px_0px_rgba\(0\,0\,0\,0\.03\)\,0px_1px_2px_0px_rgba\(0\,0\,0\,0\.06\)\] {
    --tw-shadow:
      0px 0px 1px 0px var(--tw-shadow-color, #00000008),
      0px 1px 2px 0px var(--tw-shadow-color, #0000000f);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[inset_0px_0px_0px_1px_rgba\(26\,26\,0\,0\.16\)\] {
    --tw-shadow: inset 0px 0px 0px 1px var(--tw-shadow-color, #1a1a0029);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow:
      0 1px 3px 0 var(--tw-shadow-color, #0000001a),
      0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-gray-300 {
    --tw-ring-color: var(--color-gray-300);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-border: #0000;
    --btn-noise: none;
  }
  .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible):not(
      :disabled,
      [disabled],
      .btn-disabled
    ) {
    --btn-fg: currentColor;
    outline-color: currentColor;
  }
  @media (hover: none) {
    .btn-ghost:hover:not(
        .btn-active,
        :active,
        :focus-visible,
        :disabled,
        [disabled],
        .btn-disabled
      ) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-border: #0000;
      --btn-noise: none;
      --btn-fg: currentColor;
    }
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property:
      color,
      background-color,
      border-color,
      outline-color,
      text-decoration-color,
      fill,
      stroke,
      --tw-gradient-from,
      --tw-gradient-via,
      --tw-gradient-to,
      opacity,
      box-shadow,
      transform,
      translate,
      scale,
      rotate,
      filter,
      -webkit-backdrop-filter,
      backdrop-filter,
      display,
      content-visibility,
      overlay,
      pointer-events;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property:
      color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from,
      --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .delay-300 {
    transition-delay: 0.3s;
  }
  .duration-150 {
    --tw-duration: 0.15s;
    transition-duration: 0.15s;
  }
  .duration-200 {
    --tw-duration: 0.2s;
    transition-duration: 0.2s;
  }
  .duration-750 {
    --tw-duration: 0.75s;
    transition-duration: 0.75s;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .btn-outline:not(
    .btn-active,
    :hover,
    :active:focus,
    :focus-visible,
    :disabled,
    [disabled],
    .btn-disabled,
    :checked
  ) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-fg: var(--btn-color);
    --btn-border: var(--btn-color);
    --btn-noise: none;
  }
  @media (hover: none) {
    .btn-outline:hover:not(
        .btn-active,
        :active,
        :focus-visible,
        :disabled,
        [disabled],
        .btn-disabled,
        :checked
      ) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-fg: var(--btn-color);
      --btn-border: var(--btn-color);
      --btn-noise: none;
    }
  }
  .btn-soft:not(
    .btn-active,
    :hover,
    :active:focus,
    :focus-visible,
    :disabled,
    [disabled],
    .btn-disabled
  ) {
    --btn-shadow: "";
    --btn-fg: var(--btn-color, var(--color-base-content));
    --btn-bg: var(--btn-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn-soft:not(
      .btn-active,
      :hover,
      :active:focus,
      :focus-visible,
      :disabled,
      [disabled],
      .btn-disabled
    ) {
      --btn-bg: color-mix(
        in oklab,
        var(--btn-color, var(--color-base-content)) 8%,
        var(--color-base-100)
      );
    }
  }
  .btn-soft:not(
    .btn-active,
    :hover,
    :active:focus,
    :focus-visible,
    :disabled,
    [disabled],
    .btn-disabled
  ) {
    --btn-border: var(--btn-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn-soft:not(
      .btn-active,
      :hover,
      :active:focus,
      :focus-visible,
      :disabled,
      [disabled],
      .btn-disabled
    ) {
      --btn-border: color-mix(
        in oklab,
        var(--btn-color, var(--color-base-content)) 10%,
        var(--color-base-100)
      );
    }
  }
  .btn-soft:not(
    .btn-active,
    :hover,
    :active:focus,
    :focus-visible,
    :disabled,
    [disabled],
    .btn-disabled
  ) {
    --btn-noise: none;
  }
  @media (hover: none) {
    .btn-soft:hover:not(
        .btn-active,
        :active,
        :focus-visible,
        :disabled,
        [disabled],
        .btn-disabled
      ) {
      --btn-shadow: "";
      --btn-fg: var(--btn-color, var(--color-base-content));
      --btn-bg: var(--btn-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn-soft:hover:not(
          .btn-active,
          :active,
          :focus-visible,
          :disabled,
          [disabled],
          .btn-disabled
        ) {
        --btn-bg: color-mix(
          in oklab,
          var(--btn-color, var(--color-base-content)) 8%,
          var(--color-base-100)
        );
      }
    }
    .btn-soft:hover:not(
        .btn-active,
        :active,
        :focus-visible,
        :disabled,
        [disabled],
        .btn-disabled
      ) {
      --btn-border: var(--btn-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn-soft:hover:not(
          .btn-active,
          :active,
          :focus-visible,
          :disabled,
          [disabled],
          .btn-disabled
        ) {
        --btn-border: color-mix(
          in oklab,
          var(--btn-color, var(--color-base-content)) 10%,
          var(--color-base-100)
        );
      }
    }
    .btn-soft:hover:not(
        .btn-active,
        :active,
        :focus-visible,
        :disabled,
        [disabled],
        .btn-disabled
      ) {
      --btn-noise: none;
    }
  }
  .btn-lg {
    --fontsize: 1.125rem;
    --btn-p: 1.25rem;
    --size: calc(var(--size-field, 0.25rem) * 12);
  }
  .btn-md {
    --fontsize: 0.875rem;
    --btn-p: 1rem;
    --size: calc(var(--size-field, 0.25rem) * 10);
  }
  .btn-sm {
    --fontsize: 0.75rem;
    --btn-p: 0.75rem;
    --size: calc(var(--size-field, 0.25rem) * 8);
  }
  .btn-xl {
    --fontsize: 1.375rem;
    --btn-p: 1.5rem;
    --size: calc(var(--size-field, 0.25rem) * 14);
  }
  .btn-xs {
    --fontsize: 0.6875rem;
    --btn-p: 0.5rem;
    --size: calc(var(--size-field, 0.25rem) * 6);
  }
  .btn-accent {
    --btn-color: var(--color-accent);
    --btn-fg: var(--color-accent-content);
  }
  .btn-error {
    --btn-color: var(--color-error);
    --btn-fg: var(--color-error-content);
  }
  .btn-info {
    --btn-color: var(--color-info);
    --btn-fg: var(--color-info-content);
  }
  .btn-neutral {
    --btn-color: var(--color-neutral);
    --btn-fg: var(--color-neutral-content);
  }
  .btn-primary {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
  }
  .btn-secondary {
    --btn-color: var(--color-secondary);
    --btn-fg: var(--color-secondary-content);
  }
  .btn-success {
    --btn-color: var(--color-success);
    --btn-fg: var(--color-success-content);
  }
  .btn-warning {
    --btn-color: var(--color-warning);
    --btn-fg: var(--color-warning-content);
  }
  .input-accent,
  .input-accent:focus,
  .input-accent:focus-within {
    --input-color: var(--color-accent);
  }
  .input-error,
  .input-error:focus,
  .input-error:focus-within {
    --input-color: var(--color-error);
  }
  .input-info,
  .input-info:focus,
  .input-info:focus-within {
    --input-color: var(--color-info);
  }
  .input-neutral,
  .input-neutral:focus,
  .input-neutral:focus-within {
    --input-color: var(--color-neutral);
  }
  .input-primary,
  .input-primary:focus,
  .input-primary:focus-within {
    --input-color: var(--color-primary);
  }
  .input-secondary,
  .input-secondary:focus,
  .input-secondary:focus-within {
    --input-color: var(--color-secondary);
  }
  .input-success,
  .input-success:focus,
  .input-success:focus-within {
    --input-color: var(--color-success);
  }
  .input-warning,
  .input-warning:focus,
  .input-warning:focus-within {
    --input-color: var(--color-warning);
  }
  .not-has-\[nav\]\:hidden:not(:has(:is(nav))) {
    display: none;
  }
  @media (hover: hover) {
    .group-hover\:text-blue-500:is(:where(.group):hover *) {
      color: var(--color-blue-500);
    }
  }
  .before\:absolute:before {
    content: var(--tw-content);
    position: absolute;
  }
  .before\:top-0:before {
    content: var(--tw-content);
    top: calc(var(--spacing) * 0);
  }
  .before\:top-1\/2:before {
    content: var(--tw-content);
    top: 50%;
  }
  .before\:bottom-0:before {
    content: var(--tw-content);
    bottom: calc(var(--spacing) * 0);
  }
  .before\:bottom-1\/2:before {
    content: var(--tw-content);
    bottom: 50%;
  }
  .before\:left-\[0\.4rem\]:before {
    content: var(--tw-content);
    left: 0.4rem;
  }
  .before\:border-l:before {
    content: var(--tw-content);
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .before\:border-\[\#e3e3e0\]:before {
    content: var(--tw-content);
    border-color: #e3e3e0;
  }
  .odd\:bg-white\/2:nth-child(odd) {
    background-color: #ffffff05;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .odd\:bg-white\/2:nth-child(odd) {
      background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
    }
  }
  .even\:bg-white:nth-child(2n) {
    background-color: var(--color-white);
  }
  @media (hover: hover) {
    .hover\:border-\[\#1915014a\]:hover {
      border-color: #1915014a;
    }
    .hover\:border-\[\#19140035\]:hover {
      border-color: #19140035;
    }
    .hover\:border-black:hover {
      border-color: var(--color-black);
    }
    .hover\:bg-black:hover {
      background-color: var(--color-black);
    }
    .hover\:bg-neutral-100:hover {
      background-color: var(--color-neutral-100);
    }
    .hover\:bg-neutral-200:hover {
      background-color: var(--color-neutral-200);
    }
    .hover\:bg-white\/50:hover {
      background-color: #ffffff80;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/50:hover {
        background-color: color-mix(
          in oklab,
          var(--color-white) 50%,
          transparent
        );
      }
    }
    .hover\:text-gray-400:hover {
      color: var(--color-gray-400);
    }
    .hover\:text-gray-500:hover {
      color: var(--color-gray-500);
    }
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }
  .focus\:z-10:focus {
    z-index: 10;
  }
  .focus\:border-blue-300:focus {
    border-color: var(--color-blue-300);
  }
  .focus\:ring:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  .active\:bg-gray-100:active {
    background-color: var(--color-gray-100);
  }
  .active\:text-gray-500:active {
    color: var(--color-gray-500);
  }
  .active\:text-gray-700:active {
    color: var(--color-gray-700);
  }
  @media (min-width: 40rem) {
    .sm\:mb-16 {
      margin-bottom: calc(var(--spacing) * 16);
    }
    .sm\:flex {
      display: flex;
    }
    .sm\:hidden {
      display: none;
    }
    .sm\:flex-1 {
      flex: 1;
    }
    .sm\:items-center {
      align-items: center;
    }
    .sm\:justify-between {
      justify-content: space-between;
    }
    .sm\:p-14 {
      padding: calc(var(--spacing) * 14);
    }
    .sm\:py-0 {
      padding-block: calc(var(--spacing) * 0);
    }
    .sm\:pt-16 {
      padding-top: calc(var(--spacing) * 16);
    }
    .sm\:pb-0 {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  @media (min-width: 64rem) {
    .lg\:-mt-\[6\.6rem\] {
      margin-top: -6.6rem;
    }
    .lg\:mb-0 {
      margin-bottom: calc(var(--spacing) * 0);
    }
    .lg\:mb-6 {
      margin-bottom: calc(var(--spacing) * 6);
    }
    .lg\:-ml-px {
      margin-left: -1px;
    }
    .lg\:ml-0 {
      margin-left: calc(var(--spacing) * 0);
    }
    .lg\:block {
      display: block;
    }
    .lg\:aspect-auto {
      aspect-ratio: auto;
    }
    .lg\:w-\[438px\] {
      width: 438px;
    }
    .lg\:max-w-4xl {
      max-width: var(--container-4xl);
    }
    .lg\:grow {
      flex-grow: 1;
    }
    .lg\:flex-row {
      flex-direction: row;
    }
    .lg\:justify-center {
      justify-content: center;
    }
    .lg\:rounded-t-none {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
    .lg\:rounded-tl-lg {
      border-top-left-radius: var(--radius-lg);
    }
    .lg\:rounded-r-lg {
      border-top-right-radius: var(--radius-lg);
      border-bottom-right-radius: var(--radius-lg);
    }
    .lg\:rounded-br-none {
      border-bottom-right-radius: 0;
    }
    .lg\:p-8 {
      padding: calc(var(--spacing) * 8);
    }
    .lg\:p-20 {
      padding: calc(var(--spacing) * 20);
    }
  }
  .rtl\:flex-row-reverse:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    flex-direction: row-reverse;
  }
  @media (prefers-color-scheme: dark) {
    .dark\:block {
      display: block;
    }
    .dark\:hidden {
      display: none;
    }
    :where(.dark\:divide-white\/5 > :not(:last-child)) {
      border-color: #ffffff0d;
    }
    @supports (color: color-mix(in lab, red, red)) {
      :where(.dark\:divide-white\/5 > :not(:last-child)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
    :where(.dark\:divide-white\/10 > :not(:last-child)) {
      border-color: #ffffff1a;
    }
    @supports (color: color-mix(in lab, red, red)) {
      :where(.dark\:divide-white\/10 > :not(:last-child)) {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
    .dark\:border {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
    .dark\:border-none {
      --tw-border-style: none;
      border-style: none;
    }
    .dark\:border-\[\#3E3E3A\] {
      border-color: #3e3e3a;
    }
    .dark\:border-\[\#eeeeec\] {
      border-color: #eeeeec;
    }
    .dark\:border-amber-500 {
      border-color: var(--color-amber-500);
    }
    .dark\:border-amber-800 {
      border-color: var(--color-amber-800);
    }
    .dark\:border-blue-600 {
      border-color: var(--color-blue-600);
    }
    .dark\:border-blue-800 {
      border-color: var(--color-blue-800);
    }
    .dark\:border-emerald-500 {
      border-color: var(--color-emerald-500);
    }
    .dark\:border-emerald-600 {
      border-color: var(--color-emerald-600);
    }
    .dark\:border-gray-600 {
      border-color: var(--color-gray-600);
    }
    .dark\:border-neutral-500 {
      border-color: var(--color-neutral-500);
    }
    .dark\:border-neutral-700 {
      border-color: var(--color-neutral-700);
    }
    .dark\:border-neutral-800 {
      border-color: var(--color-neutral-800);
    }
    .dark\:border-rose-500 {
      border-color: var(--color-rose-500);
    }
    .dark\:border-rose-900 {
      border-color: var(--color-rose-900);
    }
    .dark\:border-white\/5 {
      border-color: #ffffff0d;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:border-white\/5 {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
    .dark\:border-white\/8 {
      border-color: #ffffff14;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:border-white\/8 {
        border-color: color-mix(in oklab, var(--color-white) 8%, transparent);
      }
    }
    .dark\:border-white\/10 {
      border-color: #ffffff1a;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:border-white\/10 {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
    .dark\:border-white\/20 {
      border-color: #fff3;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:border-white\/20 {
        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
    .dark\:border-white\/\[9\%\] {
      border-color: #ffffff17;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:border-white\/\[9\%\] {
        border-color: color-mix(in oklab, var(--color-white) 9%, transparent);
      }
    }
    .dark\:bg-\[\#0a0a0a\] {
      background-color: #0a0a0a;
    }
    .dark\:bg-\[\#1D0002\] {
      background-color: #1d0002;
    }
    .dark\:bg-\[\#1a1a1a\] {
      background-color: #1a1a1a;
    }
    .dark\:bg-\[\#3E3E3A\] {
      background-color: #3e3e3a;
    }
    .dark\:bg-\[\#161615\] {
      background-color: #161615;
    }
    .dark\:bg-\[\#eeeeec\] {
      background-color: #eeeeec;
    }
    .dark\:bg-amber-600 {
      background-color: var(--color-amber-600);
    }
    .dark\:bg-amber-950 {
      background-color: var(--color-amber-950);
    }
    .dark\:bg-blue-700 {
      background-color: var(--color-blue-700);
    }
    .dark\:bg-blue-950 {
      background-color: var(--color-blue-950);
    }
    .dark\:bg-emerald-600 {
      background-color: var(--color-emerald-600);
    }
    .dark\:bg-emerald-900\/70 {
      background-color: #004e3bb3;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:bg-emerald-900\/70 {
        background-color: color-mix(
          in oklab,
          var(--color-emerald-900) 70%,
          transparent
        );
      }
    }
    .dark\:bg-gray-800 {
      background-color: var(--color-gray-800);
    }
    .dark\:bg-neutral-400 {
      background-color: var(--color-neutral-400);
    }
    .dark\:bg-neutral-600 {
      background-color: var(--color-neutral-600);
    }
    .dark\:bg-neutral-700 {
      background-color: var(--color-neutral-700);
    }
    .dark\:bg-neutral-800 {
      background-color: var(--color-neutral-800);
    }
    .dark\:bg-neutral-900 {
      background-color: var(--color-neutral-900);
    }
    .dark\:bg-rose-600 {
      background-color: var(--color-rose-600);
    }
    .dark\:bg-rose-900\! {
      background-color: var(--color-rose-900) !important;
    }
    .dark\:bg-rose-950 {
      background-color: var(--color-rose-950);
    }
    .dark\:bg-transparent {
      background-color: #0000;
    }
    .dark\:bg-white {
      background-color: var(--color-white);
    }
    .dark\:bg-white\/1 {
      background-color: #ffffff03;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:bg-white\/1 {
        background-color: color-mix(
          in oklab,
          var(--color-white) 1%,
          transparent
        );
      }
    }
    .dark\:bg-white\/3 {
      background-color: #ffffff08;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:bg-white\/3 {
        background-color: color-mix(
          in oklab,
          var(--color-white) 3%,
          transparent
        );
      }
    }
    .dark\:bg-white\/5 {
      background-color: #ffffff0d;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:bg-white\/5 {
        background-color: color-mix(
          in oklab,
          var(--color-white) 5%,
          transparent
        );
      }
    }
    .dark\:bg-white\/10 {
      background-color: #ffffff1a;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:bg-white\/10 {
        background-color: color-mix(
          in oklab,
          var(--color-white) 10%,
          transparent
        );
      }
    }
    .dark\:bg-white\/\[2\%\] {
      background-color: #ffffff05;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:bg-white\/\[2\%\] {
        background-color: color-mix(
          in oklab,
          var(--color-white) 2%,
          transparent
        );
      }
    }
    .dark\:bg-white\/\[3\%\] {
      background-color: #ffffff08;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:bg-white\/\[3\%\] {
        background-color: color-mix(
          in oklab,
          var(--color-white) 3%,
          transparent
        );
      }
    }
    .dark\:text-\[\#1C1C1A\] {
      color: #1c1c1a;
    }
    .dark\:text-\[\#A1A09A\] {
      color: #a1a09a;
    }
    .dark\:text-\[\#EDEDEC\] {
      color: #ededec;
    }
    .dark\:text-\[\#F61500\] {
      color: #f61500;
    }
    .dark\:text-\[\#FF4433\] {
      color: #f43;
    }
    .dark\:text-amber-300 {
      color: var(--color-amber-300);
    }
    .dark\:text-blue-300 {
      color: var(--color-blue-300);
    }
    .dark\:text-emerald-400 {
      color: var(--color-emerald-400);
    }
    .dark\:text-emerald-500 {
      color: var(--color-emerald-500);
    }
    .dark\:text-gray-300 {
      color: var(--color-gray-300);
    }
    .dark\:text-gray-400 {
      color: var(--color-gray-400);
    }
    .dark\:text-gray-600 {
      color: var(--color-gray-600);
    }
    .dark\:text-neutral-100 {
      color: var(--color-neutral-100);
    }
    .dark\:text-neutral-200 {
      color: var(--color-neutral-200);
    }
    .dark\:text-neutral-300 {
      color: var(--color-neutral-300);
    }
    .dark\:text-neutral-400 {
      color: var(--color-neutral-400);
    }
    .dark\:text-neutral-500 {
      color: var(--color-neutral-500);
    }
    .dark\:text-neutral-600 {
      color: var(--color-neutral-600);
    }
    .dark\:text-neutral-600\! {
      color: var(--color-neutral-600) !important;
    }
    .dark\:text-neutral-900 {
      color: var(--color-neutral-900);
    }
    .dark\:text-rose-100 {
      color: var(--color-rose-100);
    }
    .dark\:text-white {
      color: var(--color-white);
    }
    .dark\:text-white\! {
      color: var(--color-white) !important;
    }
    .dark\:shadow-\[inset_0px_0px_0px_1px_\#fffaed2d\] {
      --tw-shadow: inset 0px 0px 0px 1px var(--tw-shadow-color, #fffaed2d);
      box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  @media (hover: hover) {
    @media (prefers-color-scheme: dark) {
      .group-hover\:dark\:text-emerald-500:is(:where(.group):hover *) {
        color: var(--color-emerald-500);
      }
    }
  }
  @media (prefers-color-scheme: dark) {
    .dark\:before\:border-\[\#3E3E3A\]:before {
      content: var(--tw-content);
      border-color: #3e3e3a;
    }
    .odd\:dark\:bg-white\/4:nth-child(odd) {
      background-color: #ffffff0a;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .odd\:dark\:bg-white\/4:nth-child(odd) {
        background-color: color-mix(
          in oklab,
          var(--color-white) 4%,
          transparent
        );
      }
    }
    .even\:dark\:bg-white\/2:nth-child(2n) {
      background-color: #ffffff05;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .even\:dark\:bg-white\/2:nth-child(2n) {
        background-color: color-mix(
          in oklab,
          var(--color-white) 2%,
          transparent
        );
      }
    }
    @media (hover: hover) {
      .dark\:hover\:border-\[\#3E3E3A\]:hover {
        border-color: #3e3e3a;
      }
      .dark\:hover\:border-\[\#62605b\]:hover {
        border-color: #62605b;
      }
      .dark\:hover\:border-white:hover {
        border-color: var(--color-white);
      }
      .dark\:hover\:bg-white:hover {
        background-color: var(--color-white);
      }
      .dark\:hover\:bg-white\/2:hover {
        background-color: #ffffff05;
      }
      @supports (color: color-mix(in lab, red, red)) {
        .dark\:hover\:bg-white\/2:hover {
          background-color: color-mix(
            in oklab,
            var(--color-white) 2%,
            transparent
          );
        }
      }
      .dark\:hover\:bg-white\/5:hover {
        background-color: #ffffff0d;
      }
      @supports (color: color-mix(in lab, red, red)) {
        .dark\:hover\:bg-white\/5:hover {
          background-color: color-mix(
            in oklab,
            var(--color-white) 5%,
            transparent
          );
        }
      }
      .dark\:hover\:bg-white\/10:hover {
        background-color: #ffffff1a;
      }
      @supports (color: color-mix(in lab, red, red)) {
        .dark\:hover\:bg-white\/10:hover {
          background-color: color-mix(
            in oklab,
            var(--color-white) 10%,
            transparent
          );
        }
      }
    }
  }
  @media (hover: hover) {
    @media (prefers-color-scheme: dark) {
      .hover\:dark\:bg-white\/5:hover {
        background-color: #ffffff0d;
      }
      @supports (color: color-mix(in lab, red, red)) {
        .hover\:dark\:bg-white\/5:hover {
          background-color: color-mix(
            in oklab,
            var(--color-white) 5%,
            transparent
          );
        }
      }
    }
  }
  @media (prefers-color-scheme: dark) {
    @media (hover: hover) {
      .dark\:hover\:text-gray-300:hover {
        color: var(--color-gray-300);
      }
    }
  }
  @media (hover: hover) {
    @media (prefers-color-scheme: dark) {
      .hover\:dark\:text-white:hover {
        color: var(--color-white);
      }
    }
  }
  @media (prefers-color-scheme: dark) {
    .dark\:focus\:border-blue-700:focus {
      border-color: var(--color-blue-700);
    }
    .dark\:focus\:border-blue-800:focus {
      border-color: var(--color-blue-800);
    }
    .dark\:active\:bg-gray-700:active {
      background-color: var(--color-gray-700);
    }
    .dark\:active\:text-gray-300:active {
      color: var(--color-gray-300);
    }
  }
  @starting-style {
    .starting\:translate-y-4 {
      --tw-translate-y: calc(var(--spacing) * 4);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  @starting-style {
    .starting\:translate-y-6 {
      --tw-translate-y: calc(var(--spacing) * 6);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  @starting-style {
    .starting\:opacity-0 {
      opacity: 0;
    }
  }
  .\[\&_svg\]\:size-2\.5 svg {
    width: calc(var(--spacing) * 2.5);
    height: calc(var(--spacing) * 2.5);
  }
  .\[\&_svg\]\:\!text-white svg {
    color: var(--color-white) !important;
  }
  @media (hover: hover) {
    .hover\:\[\&_svg\]\:stroke-emerald-500:hover svg {
      stroke: var(--color-emerald-500);
    }
  }
  @media (prefers-color-scheme: dark) {
    .dark\:\[\&_svg\]\:\!text-white svg {
      color: var(--color-white) !important;
    }
  }
}
@keyframes rating {
  0%,
  40% {
    filter: brightness(1.05) contrast(1.05);
    scale: 1.1;
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes toast {
  0% {
    opacity: 0;
    scale: 0.9;
  }
  to {
    opacity: 1;
    scale: 1;
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  to {
    background-position: -50%;
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  inherits: false;
  initial-value: "";
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes ping {
  75%,
  to {
    opacity: 0;
    transform: scale(2);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%,
  to {
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    transform: translateY(-25%);
  }
  50% {
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transform: none;
  }
}
